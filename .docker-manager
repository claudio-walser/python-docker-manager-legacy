containerDefaults:
  dns: 172.17.0.1
  restart: always
  swappiness: 0


container:

  kolab:
    maxContainers: 1
    # newest version is broken, take the last working one
    image: net-sec/kolab:7
    #image: registry.net-sec.ch:443/net-sec/kolab
    hostname: mail
    domainname: net-sec.ch
    volumes:
      - source: /lib/modules
        target: /lib/modules:ro
      - source: /home/claudio/docker/kolab
        target: /data:rw
      - source: /etc/letsencrypt/live/mail.net-sec.ch
        target: /etc/letsencrypt/live/mail.net-sec.ch:ro
      - source: /etc/letsencrypt/archive/mail.net-sec.ch
        target: /etc/letsencrypt/archive/mail.net-sec.ch:ro
    environment:
      - TZ=Europe/Zurich
      - CERT_PATH=/etc/letsencrypt/live
    expose:
      - 80
      - 443
      - 25
      - 587
      - 110
      - 995
      - 143
      - 993
      - 4190
      - 389
    portMapping:
      - 993:993
      - 587:587
      - 143:143
      - "25:25"
    nginx:
      backendPort: 443
    cap_add:
      - NET_ADMIN

  grafana:
    maxContainers: 1
    image: grafana/grafana
    volumes:
      - source: /home/claudio/docker/grafana/lib
        target: /var/lib/grafana
      - source: /home/claudio/docker/grafana/conf
        target: /etc/grafana
      - source: /home/claudio/docker/grafana/log
        target: /var/log/grafana
    expose:
      - 3000
    nginx:
      backendPort: 3000

  prometheus:
    maxContainers: 1
    image: prom/prometheus
    volumes:
      - source: /home/claudio/docker/prometheus/conf
        target: /etc/prometheus/
      - source: /home/claudio/docker/prometheus/data
        target: /prometheus
    expose:
      - 9090
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'


  node-exporter:
    maxContainers: 1
    image: prom/node-exporter
    volumes:
      - source: /proc
        target: /host/proc:ro
      - source: /sys
        target: /host/sys:ro
      - source: /
        target: /rootfs:ro
    expose:
      - 9100
    command:
      - '-collector.procfs=/host/proc'
      - '-collector.sysfs=/host/sysfs'
      - '-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'

  cadvisor:
    maxContainers: 1
    image: google/cadvisor
    volumes:
      - source: /
        target: /rootfs:ro
      - source: /var/run
        target: /var/run
      - source: /sys
        target: /sys:ro
      - source: /var/lib/docker
        target: /var/lib/docker:ro
    expose:
      - 8080
    command:
      - '-docker tcp://172.17.0.1:2375'

  heinz:
    maxContainers: 1
    image: registry.net-sec.ch:443/net-sec/elasticsearch-kibana:kibana4
    sourceVolumes:
      - source: /home/claudio/docker/elasticsearch-base-kibana4
        target: /home/claudio/docker/elasticsearch-heinz
    volumes:
      - source: /home/claudio/docker/elasticsearch-heinz/elasticsearch
        target: /home/elasticsearch/elasticsearch/data
        uid: 1000
    expose:
      - 9200
      - 5601
    environment:
      - KIBANA_BASE_PATH="/heinz/kibana"
    nginx:
      backendPort:
        - port: 5601
          name: kibana
        - port: 9200
          name: elasticsearch

  hugo-rechtsberatung-walser:
    maxContainers: 1
    image: registry.net-sec.ch:443/net-sec/hugo-rechtsberatung-walser:latest
    expose:
      - 80
    nginx:
      backendPort: 80

  jenkins:
    maxContainers: 1
    image: registry.net-sec.ch:443/net-sec/jenkins:latest
    volumes:
      - source: /home/claudio/docker/jenkins
        target: /var/jenkins_home
        uid: 1000
    expose:
      - 8080
    nginx:
      backendPort: 8080

  redmine:
    maxContainers: 1
    image: redmine:latest
    volumes:
      - source: /home/claudio/docker/redmine/files
        target: /usr/src/redmine/files
        uid: 999
      - source: /home/claudio/docker/redmine/sqlite
        target: /usr/src/redmine/sqlite
        uid: 999
      - source: /home/claudio/docker/redmine/themes
        target: /usr/src/redmine/public/themes
        uid: 999
    expose:
      - 3000
    nginx:
      backendPort: 3000

  registry:
    maxContainers: 1
    image: registry:latest
    volumes:
      - source: /home/claudio/docker/registry/data
        target: /var/lib/registry
    expose:
      - 5000
